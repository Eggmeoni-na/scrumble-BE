name: CD-dev
on:
  push:
    branches:
      - dev-cd
  workflow_dispatch:
jobs:
  upload-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Caching Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: BootJar with Gradle
        run: ./gradlew bootJar
        shell: bash

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build And Push docker image
        run: |
          docker buildx build --platform linux/amd64 --push --tag ${{ vars.DOCKERHUB_USERNAME }}/scrumble:${{ vars.DOCKER_PROD_TAG }} --tag ${{ vars.DOCKERHUB_USERNAME }}/scrumble:latest -f Dockerfile-dev .
  deploy:
    needs: upload-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: excuting remote ssh commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_AWS_REMOTE_IP }}
          username: ${{ secrets.DEV_AWS_ACCESS_USER }}
          key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          port: ${{ secrets.AWS_ACCESS_PORT }}
          script_stop: true
          script: |
            docker compose pull
            docker compose down
            docker compose up -d
            docker image prune -af
